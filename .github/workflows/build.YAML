name: deploy-to-ec2

on:
  push:
    branches: [ main ]
    paths:
      - "vote/**"
      - "result/**"
      - "worker/**"
      - "compose/docker-compose.yml"
      - ".github/workflows/deploy.yml"
  workflow_dispatch:

env:
  REG_USER: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build & push each service image
      - name: Build & push vote
        uses: docker/build-push-action@v6
        with:
          context: ./vote
          file: ./vote/Dockerfile
          push: true
          tags: ${{ env.REG_USER }}/vote:latest

      - name: Build & push result
        uses: docker/build-push-action@v6
        with:
          context: ./result
          file: ./result/Dockerfile
          push: true
          tags: ${{ env.REG_USER }}/result:latest

      - name: Build & push worker
        uses: docker/build-push-action@v6
        with:
          context: ./worker
          file: ./worker/Dockerfile
          push: true
          tags: ${{ env.REG_USER }}/worker:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Copy compose file to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "compose/docker-compose.yml"
          target: "/opt/app"

      - name: SSH & deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo mkdir -p /opt/app && cd /opt/app
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker compose -f docker-compose.yml pull
            docker compose -f docker-compose.yml up -d
            docker system prune -f
